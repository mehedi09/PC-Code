<?xml version="1.0" encoding="utf-8" ?>
<project xmlns="http://www.codeontime.com/2008/code-generator"
         xmlns:ontime="http://www.codeontime.com/2008/code-generator"
         xmlns:a="urn:schemas-codeontime-com:data-aquarium-project"
         xmlns:c="urn:schemas-codeontime-com:data-aquarium"
				 xmlns:config="http://www.codeontime.com/2008/codedom-configuration"
				 xmlns:vsproj="http://schemas.microsoft.com/developer/msbuild/2003"
         xmlns:app="urn:schemas-codeontime-com:data-aquarium-application"
         debug="false"
>
  <information>
    <product>COT201109-DNN</product>
    <title>DotNetNuke Factory</title>
    <description>Create application pages as controls with data views incorporated in a DotNetNuke module. Registered module can be configured by end users. Integrate a line-of-business database application with a popular open source web content management system in minutes.</description>
    <vendor>Code OnTime LLC</vendor>
    <website>http://www.codeontime.com</website>
    <about>http://codeontime.com/learn/project-types/dotnetnuke-factory</about>
    <demo>http://www.codeontime.com/demo</demo>
  </information>
  <build>
    <!-- load entire project output file/folder tree -->
    <load path="$ProjectPath">
      <if test="not(file/@name='DataAquarium.Project.xml')">
        <copy input="$LibraryRoot\Data Aquarium\DataAquarium.Project.xml" output="DataAquarium.Project.xml"/>
      </if>
    </load>
    <navigate url="..\Data Aquarium\DataAquarium.Start.htm?webServer2=false&amp;splash=DotNetNukeFactory"/>
    <load path="DataAquarium.Project.xml">
      <variable name="ConnectionString" select="a:project/a:connectionString"/>
      <variable name="ProviderName" select="a:project/a:providerName"/>
      <variable name="MembershipProviderName" select="a:project/a:membership/@providerName"/>
      <load path="$ProjectPath">
        <if test="not(file/@name='DataAquarium.Metadata.xml')">
          <execute fileName="CodeOnTime.exe" arguments="/connectionString:&quot;$ConnectionString&quot; /providerName:&quot;$ProviderName&quot; /output:&quot;$ProjectPath\DataAquarium.Metadata.xml&quot;" mode="wait"/>
        </if>
      </load>
    </load>
    <retract path="Error.DataAquarium.Metadata.xml" test="ontime:error!=''" steps="2"/>
    <!-- convert project data model in the Data Aquarium controller collection -->
    <load path="DataAquarium.Project.xml">
      <variable name="Compatibility" select="a:project/@compatibility"/>
      <variable name="Namespace" select="a:project/a:namespace"/>
      <variable name="TargetFramework" select="a:project/@targetFramework"/>
      <variable name="ScriptOnly" select="a:project/@targetFramework!='3.5' and a:project/a:features/a:framework/@scriptOnly='true'"/>
      <variable name="ReportsEnabled" select="a:project/a:reports/@enabled"/>
      <variable name="MembershipEnabled" select="a:project/a:membership/@enabled"/>
      <variable name="WindowsAuthentication" select="a:project/a:membership/@windowsAuthentication"/>
      <variable name="ActiveDirectory" select="a:project/a:membership/@activeDirectory"/>
      <variable name="CustomSecurity" select="a:project/a:membership/@customSecurity"/>
      <variable name="DedicatedLogin" select="a:project/a:membership/@dedicatedLogin"/>
      <variable name="HelpEnabled" select="/a:project/a:membership/@displayHelp"/>
      <variable name="AnnotationsEnabled" select="a:project/a:features/@annotations"/>
      <variable name="AnnotationsPath" select="a:project/a:features/@annotationsPath"/>
      <variable name="NewColumnEnabled" select="a:project/a:features/@newColumn"/>
      <variable name="FloatingEnabled" select="a:project/a:features/@floating"/>
      <variable name="MaxGridFields" select="a:project/a:features/@maxGridFields"/>
      <variable name="MultiSelectEnabled" select="a:project/a:features/@multiSelect"/>
      <variable name="ShowModalForms" select="a:project/a:features/@showModalForms"/>
      <variable name="SearchOnStart" select="a:project/a:features/@advancedSearch"/>
      <variable name="SearchOnStartInLookups" select="a:project/a:features/@advancedLookup"/>
      <variable name="BatchEditEnabled" select="a:project/a:features/@batchEdit"/>
      <variable name="RelationshipExplorer" select="a:project/a:features/@relationshipExplorer"/>
      <variable name="EnableTransactions" select="a:project/a:features/@enableTransactions"/>
      <variable name="PageHeader" select="a:project/a:features/@pageHeader"/>
      <variable name="Copyright" select="a:project/a:features/@copyright"/>
      <variable name="DataViewLayout" select="a:project/a:layout/@name"/>
      <variable name="BLL_DiscoveryDepth" select="a:project/a:bll/@discoveryDepth"/>
      <variable name="BLL_FieldMap" select="a:project/a:bll/a:fieldMap"/>
      <variable name="BLL_Keys" select="a:project/a:bll/a:keys"/>
      <variable name="BLL_FieldsToIgnore" select="a:project/a:bll/a:fieldsToIgnore"/>
      <variable name="BLL_FieldsToHide" select="a:project/a:bll/a:fieldsToHide"/>
      <variable name="BLL_CustomLabels" select="a:project/a:bll/a:customLabels"/>
      <variable name="DatabaseObjectFilter" select="a:project/a:databaseObjectFilter"/>
      <variable name="BLL_LabelFormatExpression" select="a:project/a:bll/@labelFormatExpression"/>
      <variable name="BLL_SharedBusinessRules" select="a:project/a:bll/@generateSharedBusinessRules"/>
      <variable name="BLL_IncludeViews" select="a:project/a:bll/@includeViews"/>
      <variable name="WebConfigUserData" select="a:project/a:webServer/a:webConfig"/>
      <variable name="Globalization_SupportedCultures" select="a:project/a:globalization/@supportedCultures"/>
      <variable name="Globalization_GoogleTranslateApiKey" select="a:project/a:globalization/@googleTranslateApiKey"/>
      <variable name="EASE_UrlHashing" select="a:project/a:features/a:ease/@urlHashing"/>
      <variable name="DetectUnderscoreSeparatedSchema" select="a:project/a:features/a:navigation/@detectUnderscoreSeparatedSchema"/>
      <variable name="AllowBlobUploadOnInsert" select="a:project/a:features/a:blob/@allowUploadOnInsert"/>
      <variable name="HostPath" select="a:project/a:host/@path"/>
      <variable name="ActionColumn" select="/a:project/a:features/a:grid/@actionColumn"/>
      <variable name="DatabaseObjectGenerate" select="a:project/a:databaseObjectFilter/@generate"/>
      <variable name="UseExtenders" select="a:project/a:features/a:framework/@useExtenders"/>
      <choose>
        <when test="$TargetFramework='4.0'">
          <variable name="ReportTemplate" select="'Template40'"/>
        </when>
        <otherwise>
          <variable name="ReportTemplate" select="'Template'"/>
        </otherwise>
      </choose>
    </load>
    <!-- load meta data produced by the import process in the previous step and convert it into the standardized project data model -->
    <load path="DataAquarium.Metadata.xml" skipIfCached="Controllers.xml">
      <transform template="$LibraryRoot\_System\DataModel.xslt" output="DataModel.xml">
        <param name="Keys" select="$BLL_Keys"/>
        <param name="IncludeViews" select="$BLL_IncludeViews"/>
        <param name="DatabaseObjectFilter" select="$DatabaseObjectFilter"/>
      </transform>
      <load path="$ProjectPath\DataModel.xml">
        <transform template="$LibraryRoot\_System\DataModelReducer.xslt" output="DataModel.xml"/>
      </load>
    </load>
    <load path="DataModel.xml" skipIfCached="Controllers.xml">
      <transform template="$LibraryRoot\_System\BusinessObjects.xslt" output="Controllers.xml">
        <param name="AllowBlobSupport" select="'true'"/>
        <param name="DiscoveryDepth" select="$BLL_DiscoveryDepth"/>
        <param name="FieldMap" select="$BLL_FieldMap"/>
        <param name="LabelFormatExpression" select="$BLL_LabelFormatExpression"/>
        <param name="FieldsToIgnore" select="$BLL_FieldsToIgnore"/>
        <param name="FieldsToHide" select="$BLL_FieldsToHide"/>
        <param name="CustomLabels" select="$BLL_CustomLabels"/>
        <param name="MaxNumberOfDataFieldsInGridView" select="$MaxGridFields"/>
        <param name="DetectUnderscoreSeparatedSchema" select="$DetectUnderscoreSeparatedSchema"/>
        <param name="AllowBlobUploadOnInsert" select="$AllowBlobUploadOnInsert"/>
      </transform>
    </load>
    <load path="Controllers.xml" skipIfCached="Controllers.xml">
      <transform template="$LibraryRoot\Web Site Factory\MapBuilder.1.xslt" output="Map1.xml">
        <param name="DatabaseObjectGenerate" select="$DatabaseObjectGenerate"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\DataAquarium.xslt" output="Controllers.xml" cache="true">
        <param name="ReportsEnabled" select="$ReportsEnabled"/>
        <param name="FactoryEnabled" select="'true'"/>
        <param name="BatchEditEnabled" select="$BatchEditEnabled"/>
        <param name="RelationshipExplorer" select="$RelationshipExplorer"/>
        <param name="EnableTransactions" select="$EnableTransactions"/>
        <param name="SearchOnStartInLookups" select="$SearchOnStartInLookups"/>
        <param name="TargetFramework" select="$TargetFramework"/>
        <param name="ActionColumn" select="$ActionColumn"/>
      </transform>
    </load>
    <load path="$ProjectPath\Map1.xml" skipIfCached="Application.xml">
      <transform template="$LibraryRoot\Web Site Factory\MapBuilder.2.xslt" output="Map2.xml"/>
    </load>
    <load path="$ProjectPath\Map2.xml" skipIfCached="Application.xml">
      <transform template="$LibraryRoot\Web Site Factory\MapBuilder.3.xslt" output="Map3.xml"/>
    </load>
    <load path="$ProjectPath\Map3.xml" skipIfCached="Application.xml">
      <transform template="$LibraryRoot\Web Site Factory\MapBuilder.4.xslt" output="Map4.xml"/>
    </load>
    <load path="$ProjectPath\Controllers.Cache.xml" useLog="false" skipIfCached="Application.xml">
      <transform template="$LibraryRoot\Web Site Factory\Application.xslt" output="Application.xml" cache="true">
        <param name="ProjectPath" select="$ProjectPath"/>
        <param name="MembershipEnabled" select="$MembershipEnabled"/>
        <param name="DedicatedLogin" select="$DedicatedLogin"/>
        <param name="Style" select="$DataViewLayout"/>
        <param name="MultiSelectEnabled" select="$MultiSelectEnabled"/>
        <param name="ShowModalForms" select="$ShowModalForms"/>
        <param name="SearchOnStart" select="$SearchOnStart"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
      </transform>
      <if test="contains($Compatibility, '20111118')">
        <load path="$ProjectPath\Application.Cache.xml">
          <transform template="$LibraryRoot\Web Site Factory\ApplicationReducer.xslt" output="Application.Cache.xml"/>
        </load>
      </if>
    </load>
    <load path="$ProjectPath\Controllers.xml" useLog="true">
      <message text="Finished processing Controllers.xml log."/>
    </load>
    <load path="$ProjectPath\Application.xml" useLog="true">
      <message text="Finished processing Application.xml log."/>
    </load>
    <navigate url="..\Data Aquarium\DataAquarium.Controllers.htm"/>
    <retract path="DataAquarium.Project.xml" test="$NextStep!='Generate'" steps="14"/>
    <!-- create a backup of the project source code -->
    <message text="backup the previous version of the project"/>
    <load path="$ProjectPath">
      <forEach select="//file[not(contains(@path, '\bin\') or contains(@path, '\obj\') or contains(@path, 'AjaxControlToolkit\'))]">
        <copy input="$ProjectPath\{@path}" output="$BackupPath\{@path}" silent="true"/>
      </forEach>
    </load>
    <message text="end backup"/>
    <load path="$ProjectPath\Application.xml" useLog="true">
      <transform template="$LibraryRoot\Web Site Factory\Web.Sitemap.xslt" output="WebApp\Web.Sitemap"/>
    </load>
    <load path="$LibraryRoot\_Config\CodeOnTime.CodeDom.xml">
      <variable name="CodedomProviderName" select="/config:configuration/config:providers/@default"/>
      <variable name="ProjectExtension" select="concat(substring-after(/config:configuration/config:providers/config:provider[@name=/config:configuration/config:providers/@default]/@extension, '.'), 'proj')"/>
    </load>
    <load path="DataAquarium.Project.xml">
      <variable name="BLL_Generate" select="a:project/a:bll/@generate"/>
      <variable name="BLL_SelectMethod" select="a:project/a:bll/@selectMethod"/>
      <variable name="BLL_SelectSingleMethod" select="a:project/a:bll/@selectSingleMethod"/>
      <variable name="BLL_InsertMethod" select="a:project/a:bll/@insertMethod"/>
      <variable name="BLL_UpdateMethod" select="a:project/a:bll/@updateMethod"/>
      <variable name="BLL_DeleteMethod" select="a:project/a:bll/@deleteMethod"/>
      <variable name="Theme" select="a:project/a:theme/@name"/>
      <variable name="ThemeInput" select="'$LibraryRoot\Data Aquarium\_App_Themes\$Theme'"/>
      <variable name="ThemeOutput" select="'$ProjectPath\$Namespace\Theme'"/>
      <!-- copy "Scripts" files-->
      <load path="$LibraryRoot\Data Aquarium\Scripts">
        <forEach select="//file[@name !='Web.Membership.js' and @name != 'Web.MembershipManager.js' and @name != 'Web.MembershipResources.js']">
          <copy input="$LibraryRoot\Data Aquarium\Scripts\{@path}" output="$Namespace\Scripts\{@path}"/>
        </forEach>
      </load>
      <load path="$LibraryRoot\Premium\Scripts">
        <forEach select="//file">
          <copy input="$LibraryRoot\Premium\Scripts\{@path}" output="$Namespace\Scripts\{@path}"/>
        </forEach>
      </load>
      <if test="$TargetFramework='3.5'">
        <copy input="$LibraryRoot\DotNetNuke Factory\Scripts\MicrosoftAjax.js" output="$Namespace\Scripts\MicrosoftAjax.js" />
        <copy input="$LibraryRoot\DotNetNuke Factory\Scripts\MicrosoftAjaxWebForms.js" output="$Namespace\Scripts\MicrosoftAjaxWebForms.js" />
      </if>
      <if test="$ReportsEnabled='true'">
        <copy input="$LibraryRoot\Data Aquarium\Reports\$ReportTemplate.xslt" output="$Namespace\Reports\Template.xslt"/>
        <transform template="$LibraryRoot\Data Aquarium\Report.ashx.xslt" output="Modules\Report.ashx"  when="TemplateChanged" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
        </transform>
      </if>
      <!-- delete any previous themes -->
      <load path="$LibraryRoot\Data Aquarium\_App_Themes">
        <forEach select="folder">
          <delete path="$Namespace\Theme\{@name}.css" silent="true"/>
        </forEach>
        <forEach select="folder">
          <variable name="ThemeFolder" select="@path"/>
          <load path="$ProjectPath\WebApp\App_Themes\$ThemeFolder">
            <forEach select="//file">
              <delete path="$ProjectPath\WebApp\App_Themes\$ThemeFolder\{@path}" silent="true"/>
            </forEach>
          </load>
          <delete path="$ProjectPath\WebApp\App_Themes\{@path}" silent="true"/>
          <delete path="$ProjectPath\WebApp\App_Themes\$Namespace\_Theme_{@name}.css" silent="true"/>
        </forEach>
      </load>
      <!-- copy shared theme and target theme in the App_Themes folder -->
      <load path="$LibraryRoot\Data Aquarium\_App_Themes\_Shared">
        <forEach select="//file[@name!='Membership.css']">
          <copy input="$LibraryRoot\Data Aquarium\_App_Themes\_Shared\{@path}" output="$Namespace\Theme\{@path}" silent="true"/>
          <copy input="$LibraryRoot\Data Aquarium\_App_Themes\_Shared\{@path}" output="WebApp\App_Themes\_Shared\{@path}" silent="true"/>
        </forEach>
      </load>
      <load path="$ThemeInput">
        <forEach select="//file[not(contains(@name, '.css'))]">
          <copy input="$ThemeInput\{@path}" output="$Namespace\Theme\{@path}" silent="true"/>
          <copy input="$ThemeInput\{@path}" output="WebApp\App_Themes\$Theme\{@path}" silent="true"/>
        </forEach>
      </load>
      <load path="$LibraryRoot\Web Site Factory\_App_Themes\Factory">
        <forEach select="//file">
          <copy input="$LibraryRoot\Web Site Factory\_App_Themes\Factory\{@path}" output="$Namespace\Theme\{@path}"/>
        </forEach>
      </load>
      <load path="$ThemeInput">
        <forEach select="//file">
          <copy input="$ThemeInput\{@path}" output="$Namespace\Theme\{@path}"/>
        </forEach>
      </load>
      <!-- alter default theme -->
      <copy input="$ProjectPath\$Namespace\Theme\Core.css" output="WebApp\App_Themes\_Shared\Core.css"/>
      <copy input="$ProjectPath\$Namespace\Theme\_Layout.css" output="$Namespace\Theme\Core.css" mode="append">
        <regex pattern="(\s)body(\s*\{)" replacement="$1table#PageBody.DNN tr td#PageContent$2"/>
      </copy>
      <delete path="$ProjectPath\$Namespace\Theme\_Layout.css"/>
      <copy input="$ProjectPath\$Namespace\Theme\$Theme.css" output="$Namespace\Theme\Core.css" mode="append"/>
      <delete path="$ProjectPath\$Namespace\Theme\$Theme.css"/>
      <copy input="$ProjectPath\$Namespace\Theme\Core.css" output="$Namespace\Theme\$Theme.css"/>
      <if test="$MembershipEnabled='true' or $CustomSecurity='true' or $WindowsAuthentication='true' or $ActiveDirectory='true'">
        <copy input="$LibraryRoot\Data Aquarium\_App_Themes\_Shared\Membership.css" output="$Namespace\Theme\$Theme.css" mode="append"/>
        <copy input="$LibraryRoot\Data Aquarium\_App_Themes\_Shared\Membership.css" output="WebApp\App_Themes\_Shared\Membership.css"/>
      </if>
      <copy input="$ThemeInput\$Theme.css" output="$Namespace\Theme\$Theme.css" mode="append">
        <regex pattern="@import .+?;\s+" replacement=""/>
        <regex pattern="url\s*\((.+?)\)" replacement="url(&lt;%= WebResource(&quot;DAF.Theme.$1&quot;) %&gt;)"/>
      </copy>
      <applyTheme theme="$Theme" output="$Namespace\Theme\$Theme.css" usage="DnnModule"/>
      <delete path="$ProjectPath\$Namespace\Theme\Core.css"/>
      <load path="$LibraryRoot\DotNetNuke Factory\Theme">
        <forEach select="//file">
          <copy input="$LibraryRoot\DotNetNuke Factory\Theme\{@path}" output="WebApp\App_Themes\$Namespace\{@path}" silent="true"/>
        </forEach>
      </load>
      <!-- generate AssemblyInfo with web resources -->
      <load path="$ProjectPath\$Namespace\Theme">
        <transform template="AssemblyInfo.codedom.xslt" output="$Namespace\AssemblyInfo.codedom.xml" async="true" dependencies="DataAquarium.Project.xml">
          <param name="Namespace" select="$Namespace"/>
          <param name="ProjectPath" select="$ProjectPath"/>
          <param name="MembershipEnabled" select="$MembershipEnabled"/>
          <param name="CustomSecurity" select="$CustomSecurity"/>
          <param name="WindowsAuthentication" select="$WindowsAuthentication"/>
          <param name="ActiveDirectory" select="$ActiveDirectory"/>
          <param name="Theme" select="$Theme"/>
          <param name="TargetFramework" select="$TargetFramework"/>
          <param name="Globalization_SupportedCultures" select="$Globalization_SupportedCultures"/>
          <param name="ScriptOnly" select="$ScriptOnly"/>
        </transform>
      </load>
      <!-- generate AssemblyInfo for Modules -->
      <transform template="ModulesAssemblyInfo.codedom.xslt" output="Modules\AssemblyInfo.codedom.xml" async="true" dependencies="DataAquarium.Project.xml">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <!-- Generate "Data" folder -->
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\ActionHandlerBase.codedom.xslt" output="$Namespace\Data\ActionHandlerBase.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\BusinessRules.codedom.xslt" output="$Namespace\Data\BusinessRules.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Premium\_App_Code\Data\ControllerNodeSet.codedom.xslt" output="$Namespace\Data\ControllerNodeSet.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\AquariumExtenderBase.codedom.xslt" output="$Namespace\Web\AquariumExtenderBase.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true">
        <param name="IsClassLibrary" select="'true'"/>
        <param name="Theme" select="$Theme"/>
        <param name="Host" select="'DotNetNuke'"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\PageBase.codedom.xslt" output="$Namespace\Web\PageBase.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true">
        <param name="UrlHashing" select="$EASE_UrlHashing"/>
        <param name="Host" select="'DotNetNuke'"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Controller.codedom.xslt" output="$Namespace\Data\Controller.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Controller.Core.codedom.xslt" output="$Namespace\Data\Controller.Core.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml"  async="true">
        <param name="Mobile" select="'false'"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Controller.Export.codedom.xslt" output="$Namespace\Data\Controller.Export.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml"  async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Controller.Filter.codedom.xslt" output="$Namespace\Data\Controller.Filter.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml"  async="true"/>
      <transform template="$LibraryRoot\Unlimited\Security\EventTracker.codedom.xslt" output="$Namespace\Security\EventTracker.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml"  async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\DataField.codedom.xslt" output="$Namespace\Data\DataField.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Action.codedom.xslt" output="$Namespace\Data\Action.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\ActionGroup.codedom.xslt" output="$Namespace\Data\ActionGroup.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\FieldValue.codedom.xslt" output="$Namespace\Data\FieldValue.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\View.codedom.xslt" output="$Namespace\Data\View.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Category.codedom.xslt" output="$Namespace\Data\Category.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\ViewPage.codedom.xslt" output="$Namespace\Data\ViewPage.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\AnnotationPlugIn.codedom.xslt" output="$Namespace\Data\AnnotationPlugIn.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml"  async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\ActionArgs.codedom.xslt" output="$Namespace\Data\ActionArgs.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\ActionResult.codedom.xslt" output="$Namespace\Data\ActionResult.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\PageRequest.codedom.xslt" output="$Namespace\Data\PageRequest.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\DistinctValueRequest.codedom.xslt" output="$Namespace\Data\DistinctValueRequest.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Common.codedom.xslt" output="$Namespace\Data\Common.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\ControllerConfiguration.codedom.xslt" output="$Namespace\Data\ControllerConfiguration.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\DynamicExpression.codedom.xslt" output="$Namespace\Data\DynamicExpression.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Transactions.codedom.xslt" output="$Namespace\Data\Transactions.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml"  async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\FilterFunctions.codedom.xslt" output="$Namespace\Data\FilterFunctions.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml"  async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\ImportProcessor.codedom.xslt" output="$Namespace\Data\ImportProcessor.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml"  async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\ControlHost.codedom.xslt" output="$Namespace\Web\ControlHost.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
        <param name="ScriptOnly" select="$ScriptOnly"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Localizer.codedom.xslt" output="$Namespace\Data\Localizer.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml"  async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\CultureManager.codedom.xslt" output="$Namespace\Data\CultureManager.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
        <param name="SupportedCultures" select="$Globalization_SupportedCultures"/>
        <param name="Host" select="'DotNetNuke'"/>
      </transform>
      <choose>
        <when test="$TargetFramework='4.0'">
          <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\ChartHost.codedom.xslt" output="$Namespace\Web\ChartHost.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true"/>
        </when>
        <otherwise>
          <delete path="$Namespace\Web\ChartHost.$CodeExtension"/>
        </otherwise>
      </choose>
      <transform template="$LibraryRoot\_Shared\DataAccess.codedom.xslt" output="$Namespace\Data\DataAccess.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <!-- Generate "Web" folder -->
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\DataViewExtender.codedom.xslt" output="$Namespace\Web\DataViewExtender.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true">
        <param name="IsClassLibrary" select="'true'"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\DataViewLookup.codedom.xslt" output="$Namespace\Web\DataViewLookup.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\DataViewTextBox.codedom.xslt" output="$Namespace\Web\DataViewTextBox.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true">
        <param name="IsClassLibrary" select="'true'"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
      </transform>
      <transform template="$LibraryRoot\Web Site Factory\_App_Code\Web\MenuExtender.codedom.xslt" output="$Namespace\Web\MenuExtender.codedom.xml" when="TemplateChanged"  usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
        <param name="Namespace" select="$Namespace"/>
        <param name="IsClassLibrary" select="'true'"/>
        <param name="Theme" select="$Theme"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\ControllerDataSource.codedom.xslt" output="$Namespace\Web\ControllerDataSource.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\ControllerDataSourceDesign.codedom.xslt" output="$Namespace\Web\ControllerDataSourceDesign.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <!-- generate "Services" folder -->
      <transform template="$LibraryRoot\Data Aquarium\_App_Code\Services\DataControllerService.codedom.xslt" output="$Namespace\Services\DataControllerService.codedom.xml" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml" async="true"/>
      <transform template="$LibraryRoot\Data Aquarium\Blob.ashx.xslt" output="Modules\Blob.ashx" async="true">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\Premium\_App_Code\Data\BlobAdapters.codedom.xslt" output="$Namespace\Data\BlobAdapters.codedom.xml" async="true" usage="ClassLibrary">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\Unlimited\Data\BlobAdaptersEx.codedom.xslt" output="$Namespace\Data\BlobAdaptersEx.codedom.xml" async="true" usage="ClassLibrary">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\ControlHost.aspx.xslt" output="Modules\ControlHost.aspx" async="true" when="TemplateChanged" dependencies="DataAquarium.Project.xml">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\Export.ashx.xslt" output="Modules\Export.ashx" async="true">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\Import.ashx.xslt" output="Modules\Import.ashx" when="TemplateChanged" dependencies="DataAquarium.Project.xml" async="true">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <wait mesage="Waiting for transformations to complete..."/>
      <!-- Generate web.config for Modules application -->
      <!--<transform template="$LibraryRoot\Data Aquarium\web.config.xslt" output="Modules\web.config" when="TemplateChanged" usage="ClassLibrary"  dependencies="DataAquarium.Project.xml">
        <param name="Namespace" select="$Namespace"/>
        <param name="IsClassLibrary" select="'true'"/>
        <param name="MembershipEnabled" select="$MembershipEnabled"/>
        <param name="ReportsEnabled" select="$ReportsEnabled"/>
        <param name="AnnotationsPath" select="$AnnotationsPath"/>
        <param name="LoginUrl" select="'~/Default.aspx'"/>
        -->
      <!--<param name="MySqlClient" select="$MySqlClient"/>
        <param name="MySqlMembershipProvider" select="$MySqlMembershipProvider"/>-->
      <!--
        <param name="ProviderFactories" select="$ProviderFactories"/>
        <param name="ProjectName" select="'Modules'"/>
      </transform>-->
      <!--<load path="$LibraryRoot\Data Aquarium\Help">
        <forEach select="//file">
          <copy input="$LibraryRoot\Data Aquarium\Help\{@path}" output="Sandbox\Help\{@path}"/>
        </forEach>
        <forEach select="//file">
          <copy input="$LibraryRoot\Data Aquarium\Help\{@path}" output="WebApp\Help\{@path}"/>
        </forEach>
      </load>-->
      <!-- generate files for WebApp application-->
      <load path="$ProjectPath\Application.xml" useLog="true">
        <copy output="Application.Web.Config.xml" />
      </load>
      <transform template="$LibraryRoot\Data Aquarium\web.config.xslt" output="web.config.xml" >
        <param name="Namespace" select="$Namespace"/>
        <param name="IsClassLibrary" select="'true'"/>
        <param name="MembershipEnabled" select="$MembershipEnabled"/>
        <param name="ReportsEnabled" select="$ReportsEnabled"/>
        <param name="ApplicationPath" select="concat($ProjectPath, '\Application.Web.Config.xml')"/>
        <param name="AnnotationsPath" select="$AnnotationsPath"/>
        <param name="FrameworkIsAssembly" select="'true'"/>
        <!--<param name="MySqlClient" select="$MySqlClient"/>
        <param name="MySqlMembershipProvider" select="$MySqlMembershipProvider"/>-->
        <param name="ProviderFactories" select="$ProviderFactories"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
        <param name="Host" select="'DotNetNuke'"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\web.config.Customize.xslt" output="WebApp\web.config">
        <param name="Path" select="concat($ProjectPath, '\web.config.xml')"/>
        <param name="UserData" select="$WebConfigUserData"/>
      </transform>
      <if test="$TargetFramework != '3.5'">
        <copy input="$LibraryRoot\Data Aquarium\Web.Debug.config" output="WebApp\Web.Debug.config" mode="create"/>
        <copy input="$LibraryRoot\Data Aquarium\Web.Release.config" output="WebApp\Web.Release.config" mode="create"/>
      </if>
      <delete path="$ProjectPath\web.config.xml"/>
      <transform template="$LibraryRoot\DotNetNuke Factory\WebApp\Host.master.1.xslt" output="WebApp\Host.master.1">
        <param name="Namespace" select="$Namespace"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\WebApp\Host.master.2.xslt" output="WebApp\Host.master.2" >
        <param name="Namespace" select="$Namespace"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\WebApp\Host.master.codedom.xslt" output="WebApp\Host.master.codedom.xml" >
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <if test="a:project/a:membership[(@enabled='true' or @customSecurity='true' or @activeDirectory='true') and @dedicatedLogin='true' ]">
        <transform template="$LibraryRoot\Web Site Factory\Login.aspx.1.xslt" output="WebApp\Login.aspx.1">
          <param name="Namespace" select="$Namespace"/>
        </transform>
        <transform template="$LibraryRoot\Web Site Factory\Login.aspx.2.xslt" output="WebApp\Login.aspx.2" >
          <param name="Namespace" select="$Namespace"/>
        </transform>
        <transform template="$LibraryRoot\Web Site Factory\Login.aspx.codedom.xslt" output="WebApp\Login.aspx.codedom.xml" >
          <param name="Namespace" select="$Namespace"/>
        </transform>
      </if>
      <copy input="Login.aspx" output="WebApp\Login.aspx" />
      <if test="$BLL_SharedBusinessRules='true'">
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Rules\SharedBusinessRules.codedom.xslt" output="$Namespace\Rules\SharedBusinessRules.codedom.xml" when="DoesNotExist" usage="ClassLibrary">
          <param name="Namespace" select="$Namespace"/>
        </transform>
      </if>
    </load>
    <copy input="$LibraryRoot\_Schemas\DataAquarium.xsd" output="$Namespace\Controllers\DataAquarium.xsd"/>
    <copy input="$LibraryRoot\_Schemas\Application.xsd" output="$Namespace\Controllers\Application.xsd"/>
    <!--
    <copy input="Web.sitemap" output="Web.sitemap"/>
		-->
    <load path="Controllers.xml" useLog="true">
      <!-- Create Sandbox web application project-->
      <!--<transform template="Default.aspx.1.xslt" output="Sandbox\Default.aspx.1">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="Default.aspx.2.xslt" output="Sandbox\Default.aspx.2">
        <param name="Namespace" select="$Namespace"/>
        <param name="MembershipEnabled" select="$MembershipEnabled"/>
      </transform>
      <transform template="Service.asmx.xslt" output="Sandbox\DAF\Service.asmx">
        <param name="Namespace" select="$Namespace"/>
      </transform>-->
      <!-- Crete WebApp web application project -->
      <transform template="Service.asmx.xslt" output="WebApp\DAF\Service.asmx">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\Web Site Factory\Default.aspx.1.xslt" output="WebApp\Default.aspx.1">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\Web Site Factory\Default.aspx.2.xslt" output="WebApp\Default.aspx.2">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\Web Site Factory\Default.aspx.codedom.xslt" output="WebApp\Default.aspx.codedom.xml" async="true">
        <param name="Namespace" select="$Namespace"/>
        <param name="HomePage" select="'~/Start.aspx'"/>
      </transform>
      <transform template="WebApp\Start.aspx.1.xslt" output="WebApp\Start.aspx.1">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="WebApp\Start.aspx.2.xslt" output="WebApp\Start.aspx.2">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="WebApp\Start.aspx.codedom.xslt" output="WebApp\Start.aspx.codedom.xml" async="true">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <!--<transform template="$LibraryRoot\Data Aquarium\Details.aspx.1.xslt" output="WebApp\Details.aspx.1">
        <param name="Namespace" select="$Namespace"/>
        <param name="IsApplication" select="'true'"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\Details.aspx.2.xslt" output="WebApp\Details.aspx.2" >
        <param name="Namespace" select="$Namespace"/>
        <param name="IsApplication" select="'true'"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\Details.aspx.codedom.xslt" output="WebApp\Details.aspx.codedom.xml">
        <param name="Namespace" select="$Namespace"/>
        <param name="IsApplication" select="'true'"/>
      </transform>-->

      <forEach select="/c:dataControllerCollection/c:dataController[not(@generate='false')]">
        <!--<copy output="$Namespace\Controllers\{@name}.xml">
          <regex pattern="&lt;text&gt;(?=[\r\n])([\s\S]*?)&lt;/text&gt;" replacement="&lt;text&gt;&lt;![CDATA[$1]]&gt;&lt;/text&gt;"/>
        </copy>-->
        <transform template="$LibraryRoot\Data Aquarium\DataAquarium.Controller.xslt" output="$Namespace\Controllers\{@name}.xml" async="true">
          <param name="AnnotationsEnabled" select="$AnnotationsEnabled"/>
          <param name="NewColumnEnabled" select="$NewColumnEnabled"/>
          <param name="FloatingEnabled" select="$FloatingEnabled"/>
          <param name="Namespace" select="$Namespace"/>
        </transform>
        <if test="string-length(@handler)>0">
          <transform template="$LibraryRoot\Data Aquarium\_App_Code\Rules\BusinessRules.codedom.xslt" output="$Namespace\Rules\{@handler}.codedom.xml" when="DoesNotExist" usage="ClassLibrary" async="true">
            <param name="Namespace" select="$Namespace"/>
            <param name="SharedBusinessRules" select="$BLL_SharedBusinessRules"/>
          </transform>
        </if>
        <if test="c:fields/c:field[string-length(c:codeFormula)>0 or string-length(c:codeDefault)>0 or string-length(c:codeValue)>0 or string-length(c:items/@targetController)>0] or .//c:dataField[string-length(c:codeFilter)>0] or c:views/c:view[@virtualViewId!='']">
          <transform template="$LibraryRoot\Data Aquarium\_App_Code\Rules\BusinessRules.Generated.codedom.xslt" output="$Namespace\Rules\{@name}.Generated.codedom.xml" usage="ClassLibrary" async="true">
            <param name="Namespace" select="$Namespace"/>
            <param name="SharedBusinessRules" select="$BLL_SharedBusinessRules"/>
          </transform>
        </if>
        <forEach select="c:businessRules/c:rule[@type='Code']">
          <transform template="$LibraryRoot\Data Aquarium\_App_Code\Rules\BusinessRules.Rule.codedom.xslt" output="$Namespace\Rules\{ancestor::c:dataController/@name}.{@id}.codedom.xml" usage="ClassLibrary" when="DoesNotExist" async="true">
            <param name="Namespace" select="$Namespace"/>
            <param name="SharedBusinessRules" select="$BLL_SharedBusinessRules"/>
          </transform>
        </forEach>
        <if test="$BLL_Generate='true'">
          <transform template="$LibraryRoot\Data Aquarium\_App_Code\Data\Objects\Object.codedom.xslt" output="$Namespace\Data\Objects\{@name}.codedom.xml" usage="ClassLibrary" async="true">
            <param name="Namespace" select="$Namespace"/>
            <param name="SelectMethod" select="$BLL_SelectMethod"/>
            <param name="SelectSingleMethod" select="$BLL_SelectSingleMethod"/>
            <param name="InsertMethod" select="$BLL_InsertMethod"/>
            <param name="UpdateMethod" select="$BLL_UpdateMethod"/>
            <param name="DeleteMethod" select="$BLL_DeleteMethod"/>
          </transform>
        </if>
        <forEach select="c:views/c:view[@reportTemplate='true']" silent="true">
          <transform template="$LibraryRoot\Data Aquarium\Reports\$ReportTemplate.xslt" output="$Namespace\Reports\{ancestor::c:dataController/@name}_{@id}.rdlc" select="ancestor::c:dataController" async="true" when="DoesNotExist">
            <param name="ControllerName" select="ancestor::c:dataController/@name"/>
            <param name="ViewName" select="@id"/>
          </transform>
        </forEach>
        <load path="$ProjectPath\WebApp\Controls">
          <variable name="AvailableChartControls" select="';'"/>
          <forEach select="//file[not(contains(@name,'ascx.')) and starts-with(@name, 'Chart_')]">
            <variable name="AvailableChartControls" select="concat('$AvailableChartControls', @name, ';')"/>
          </forEach>
        </load>
        <forEach select="c:views/c:view[@type='Chart' and c:dataFields/c:dataField[@chart!='']]">
          <variable name="ChartName" select="concat('Chart_', ancestor::c:dataController/@name, '_', @id)"/>
          <variable name="ChartType" select="c:dataFields/c:dataField[@chart!='' and @chart!='XValue']/@chart"/>
          <if test="$ChartType!='Custom' or not(contains($AvailableChartControls, concat(';', $ChartName, '.ascx')))">
            <transform template="$LibraryRoot\Premium\Controls\Chart.ascx.1.xslt" output="WebApp\Controls\$ChartName.ascx.1">
              <param name="Namespace" select="$Namespace"/>
              <param name="Name" select="$ChartName"/>
            </transform>
            <transform template="$LibraryRoot\Premium\Controls\Chart.ascx.2.xslt" output="WebApp\Controls\$ChartName.ascx.2" >
              <param name="Namespace" select="$Namespace"/>
              <param name="Name" select="$ChartName"/>
            </transform>
            <transform template="$LibraryRoot\Premium\Controls\Chart.ascx.codedom.xslt" output="WebApp\Controls\$ChartName.ascx.codedom.xml" usage="ClassLibrary">
              <param name="Namespace" select="$Namespace"/>
              <param name="Name" select="$ChartName"/>
            </transform>
          </if>
        </forEach>
      </forEach>
      <if test="$ScriptOnly='true'">
        <copy input="$LibraryRoot\Web Site Factory\Scripts\MicrosoftAjax.js" output="$Namespace\Scripts\MicrosoftAjax.js" />
        <copy input="$LibraryRoot\Web Site Factory\Scripts\MicrosoftAjaxWebForms.js" output="$Namespace\Scripts\MicrosoftAjaxWebForms.js" />
        <copy input="$LibraryRoot\Web Site Factory\Scripts\MicrosoftAjaxApplicationServices.js" output="$Namespace\Scripts\MicrosoftAjaxApplicationServices.js" />
        <copy input="$LibraryRoot\Web Site Factory\Scripts\AjaxControlToolkit.js" output="$Namespace\Scripts\AjaxControlToolkit.js" />
      </if>
      <if test="$MembershipEnabled='true'">
        <copy input="$LibraryRoot\Data Aquarium\_App_Themes\Aquarium\Membership.css" output="$Namespace\Theme\Membership.css">
          <regex pattern="url\s*\((.+?)\)" replacement="url(&lt;%= WebResource(&quot;DAF.Theme.$1&quot;) %&gt;)"/>
        </copy>
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\MembershipBarExtender.codedom.xslt" output="$Namespace\Web\MembershipBarExtender.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
          <param name="IsClassLibrary" select="'true'"/>
          <param name="Theme" select="$Theme"/>
        </transform>
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\MembershipBar.codedom.xslt" output="$Namespace\Web\MembershipBar.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
          <param name="IsClassLibrary" select="'true'"/>
        </transform>
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\MembershipManagerExtender.codedom.xslt" output="$Namespace\Web\MembershipManagerExtender.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
          <param name="IsClassLibrary" select="'true'"/>
          <param name="Theme" select="$Theme"/>
          <param name="ScriptOnly" select="$ScriptOnly"/>
        </transform>
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\MembershipManager.codedom.xslt" output="$Namespace\Web\MembershipManager.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
          <param name="IsClassLibrary" select="'true'"/>
        </transform>
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Security\MembershipBusinessRules.codedom.xslt" output="$Namespace\Security\MembershipBusinessRules.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
          <param name="ProviderName" select="$MembershipProviderName"/>
        </transform>
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Security\ExportAuthenticationModule.codedom.xslt" output="$Namespace\Security\ExportAuthenticationModule.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
        </transform>
        <load path="$LibraryRoot\Data Aquarium\Controllers\aspnet_Membership.xml">
          <transform template="$LibraryRoot\Data Aquarium\Controllers\MembershipControllerBuilder.xslt" output="$Namespace\Controllers\aspnet_Membership.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
            <param name="Namespace" select="$Namespace"/>
            <param name="ProviderName" select="$MembershipProviderName"/>
          </transform>
        </load>
        <load path="$LibraryRoot\Data Aquarium\Controllers\aspnet_Roles.xml">
          <transform template="$LibraryRoot\Data Aquarium\Controllers\MembershipControllerBuilder.xslt" output="$Namespace\Controllers\aspnet_Roles.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
            <param name="Namespace" select="$Namespace"/>
            <param name="ProviderName" select="$MembershipProviderName"/>
          </transform>
        </load>
        <if test="$TargetFramework='3.5'">
          <copy input="$LibraryRoot\Web Site Factory\Scripts\MicrosoftAjaxApplicationServices.js" output="$Namespace\Scripts\MicrosoftAjaxApplicationServices.js" />
        </if>
        <copy input="$LibraryRoot\Data Aquarium\Scripts\Web.Membership.js" output="$Namespace\Scripts\Web.Membership.js" />
        <copy input="$LibraryRoot\Data Aquarium\Scripts\Web.MembershipManager.js" output="$Namespace\Scripts\Web.MembershipManager.js" />
        <copy input="$LibraryRoot\Data Aquarium\Scripts\Web.MembershipResources.js" output="$Namespace\Scripts\Web.MembershipResources.js" />
        <!--<transform template="$LibraryRoot\Data Aquarium\Global.asax.1.xslt" output="Sandbox\Global.asax.1">
          <param name="Namespace" select="$Namespace"/>
        </transform>
        <transform template="$LibraryRoot\Data Aquarium\Global.asax.2.xslt" output="Sandbox\Global.asax.2">
          <param name="Namespace" select="$Namespace"/>
        </transform>
        <copy input="$ProjectPath\Sandbox\Global.asax" output="Sandbox\Global.asax">
          <regex pattern="\)\s+Handles\s+.+?\r" replacement=")&#13;"/>
        </copy>
        <transform template="Membership.aspx.1.xslt" output="Sandbox\Membership.aspx.1">
          <param name="Namespace" select="$Namespace"/>
        </transform>
        <transform template="Membership.aspx.2.xslt" output="Sandbox\Membership.aspx.2">
          <param name="Namespace" select="$Namespace"/>
        </transform>-->
        <load path="$ProjectPath\WebApp" depth="0">
          <if test="not(file[@name='Global.asax'])">
            <transform template="$LibraryRoot\Data Aquarium\Global.asax.1.xslt" output="WebApp\Global.asax.1">
              <param name="Namespace" select="$Namespace"/>
            </transform>
            <transform template="$LibraryRoot\Data Aquarium\Global.asax.2.xslt" output="WebApp\Global.asax.2">
              <param name="Namespace" select="$Namespace"/>
            </transform>
            <copy input="$ProjectPath\WebApp\Global.asax" output="WebApp\Global.asax">
              <regex pattern="\)\s+Handles\s+.+?\r" replacement=")&#13;"/>
            </copy>
          </if>
        </load>
      </if>
      <if test="$CustomSecurity='true' or $WindowsAuthentication or $ActiveDirectory='true'">
        <copy input="$LibraryRoot\Data Aquarium\Scripts\Web.Membership.js" output="$Namespace\Scripts\Web.Membership.js" />
        <copy input="$LibraryRoot\Data Aquarium\Scripts\Web.MembershipResources.js" output="$Namespace\Scripts\Web.MembershipResources.js" />
        <copy input="$LibraryRoot\Data Aquarium\_App_Themes\Aquarium\Membership.css" output="$Namespace\Theme\Membership.css">
          <regex pattern="url\s*\((.+?)\)" replacement="url(&lt;%= WebResource(&quot;DAF.Theme.$1&quot;) %&gt;)"/>
        </copy>
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\MembershipBarExtender.codedom.xslt" output="$Namespace\Web\MembershipBarExtender.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
          <param name="IsClassLibrary" select="'true'"/>
        </transform>
        <transform template="$LibraryRoot\Data Aquarium\_App_Code\Web\MembershipBar.codedom.xslt" output="$Namespace\Web\MembershipBar.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
          <param name="IsClassLibrary" select="'true'"/>
        </transform>
      </if>
      <if test="$ReportsEnabled='true'">
        <transform template="$LibraryRoot\Data Aquarium\Report.ashx.codedom.xslt" output="$Namespace\Handlers\Report.codedom.xml" when="TemplateChanged" usage="ClassLibrary" dependencies="DataAquarium.Project.xml" async="true">
          <param name="Namespace" select="$Namespace"/>
          <param name="TargetFramework" select="$TargetFramework"/>
          <param name="ScriptOnly" select="$ScriptOnly"/>
        </transform>
      </if>
      <!-- create web handlers -->
      <!-- create ScriptHost and Export handlers (ignores RawControllers.xml) -->
      <transform template="$LibraryRoot\Data Aquarium\Export.ashx.codedom.xslt" output="$Namespace\Handlers\Export.codedom.xml" usage="ClassLibrary">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <!--
      <transform template="$LibraryRoot\Data Aquarium\Export.ashx.codedom.xslt" output="$Namespace\Handlers\Export.codedom.xml" usage="ClassLibrary">
        <param name="Namespace" select="$Namespace"/>
      </transform>-->
      <!--<transform template="$LibraryRoot\Data Aquarium\Details.aspx.codedom.xslt" output="$Namespace\Handlers\Details.codedom.xml" usage="ClassLibrary">
        <param name="Namespace" select="$Namespace"/>
        <param name="IsClassLibrary" select="'true'"/>
      </transform>-->
      <!-- create blob handler (uses RawControllers.xml)-->
      <transform template="$LibraryRoot\Data Aquarium\Blob.ashx.codedom.xslt" output="$Namespace\Handlers\Blob.codedom.xml" usage="ClassLibrary">
        <param name="Namespace" select="$Namespace"/>
        <param name="ProviderName" select="$ProviderName"/>
        <param name="Host" select="'DotNetNuke'"/>
        <param name="Mobile" select="'false'"/>
      </transform>
      <transform template="$LibraryRoot\Data Aquarium\Import.ashx.codedom.xslt" output="$Namespace\Handlers\Import.codedom.xml" usage="ClassLibrary">
        <param name="Namespace" select="$Namespace"/>
      </transform>
    </load>
    <wait mesage="Waiting for transformations to complete..."/>
    <!-- create WebApp applications pages and user controls -->
    <load path="$ProjectPath\Application.xml" useLog="true">
      <forEach select="/app:application/app:pages/app:page[string-length(@url)=0]">
        <transform template="$LibraryRoot\Web Site Factory\Pages\Page.aspx.1.xslt" output="WebApp\Pages\{@name}.ascx.1">
          <param name="Host" select="'DotNetNuke'"/>
          <param name="Namespace" select="$Namespace"/>
          <param name="Name" select="@name"/>
        </transform>
        <transform template="$LibraryRoot\Web Site Factory\Pages\Page.aspx.2.xslt" output="WebApp\Pages\{@name}.ascx.2" >
          <param name="Host" select="'DotNetNuke'"/>
          <param name="Namespace" select="$Namespace"/>
          <param name="Name" select="@name"/>
          <param name="UseExtenders" select="'true'"/>
        </transform>
        <transform template="$LibraryRoot\Web Site Factory\Pages\Page.aspx.codedom.xslt" output="WebApp\Pages\{@name}.ascx.codedom.xml" >
          <param name="Host" select="'DotNetNuke'"/>
          <param name="Namespace" select="$Namespace"/>
          <param name="Name" select="@name"/>
        </transform>
      </forEach>
      <load path="$ProjectPath\WebApp\Controls">
        <variable name="AvailableControls" select="';'"/>
        <forEach select="//file[not(contains(@name,'ascx.') or starts-with(@name, 'Chart_'))]">
          <variable name="AvailableControls" select="concat('$AvailableControls', @name, ';')" silent="true"/>
        </forEach>
      </load>
      <forEach select="/app:application/app:userControls/app:userControl">
        <if test="@generate='Always' or not(contains($AvailableControls, concat(';', @name, '.ascx')))" silent="true">
          <choose>
            <when test="not(contains(app:body, '&lt;%@')) or string-length(app:body)>0">
              <transform template="$LibraryRoot\Web Site Factory\Controls\Control.ascx.1.xslt" output="WebApp\Controls\{@name}.ascx.1">
                <param name="Namespace" select="$Namespace"/>
                <param name="Name" select="@name"/>
              </transform>
              <transform template="$LibraryRoot\Web Site Factory\Controls\Control.ascx.2.xslt" output="WebApp\Controls\{@name}.ascx.2" >
                <param name="Namespace" select="$Namespace"/>
                <param name="Name" select="@name"/>
              </transform>
              <transform template="$LibraryRoot\Web Site Factory\Controls\Control.ascx.codedom.xslt" output="WebApp\Controls\{@name}.ascx.codedom.xml">
                <param name="Host" select="'DotNetNuke'"/>
                <param name="Namespace" select="$Namespace"/>
                <param name="Name" select="@name"/>
              </transform>
            </when>
            <otherwise>
              <transform template="$LibraryRoot\Web Site Factory\Controls\Control.ascx.2.xslt" output="WebApp\Controls\{@name}.ascx" >
                <param name="Namespace" select="$Namespace"/>
                <param name="Name" select="@name"/>
              </transform>
            </otherwise>
          </choose>
        </if>
      </forEach>
      <transform template="$LibraryRoot\DotNetNuke Factory\WebApp\Settings.ascx.1.xslt" output="WebApp\Settings.ascx.1">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\WebApp\Settings.ascx.2.xslt" output="WebApp\Settings.ascx.2">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\WebApp\Settings.ascx.codedom.xslt" output="WebApp\Settings.ascx.codedom.xml">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\Modules\AppModuleSettings.ascx.1.xslt" output="Modules\AppModuleSettings.ascx.1">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\Modules\AppModuleSettings.ascx.2.xslt" output="Modules\AppModuleSettings.ascx.2">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\Modules\AppModuleSettings.ascx.codedom.xslt" output="Modules\AppModuleSettings.ascx.codedom.xml">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\Modules\AppModuleView.ascx.1.xslt" output="Modules\AppModuleView.ascx.1">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\Modules\AppModuleView.ascx.2.xslt" output="Modules\AppModuleView.ascx.2">
        <param name="Namespace" select="$Namespace"/>
      </transform>
      <transform template="$LibraryRoot\DotNetNuke Factory\Modules\AppModuleView.ascx.codedom.xslt" output="Modules\AppModuleView.ascx.codedom.xml">
        <param name="Namespace" select="$Namespace"/>
      </transform>
    </load>
    <!-- copy Ajax Control Toolkit to the project folder -->
    <if test="$ScriptOnly='false'">
      <load path="$LibraryRoot\_AjaxControlToolkit">
        <forEach select="//file">
          <copy input="$LibraryRoot\_AjaxControlToolkit\{@path}" output="AjaxControlToolkit\\{@path}" silent="true"/>
        </forEach>
      </load>
    </if>
    <!-- copy Factory theme files-->
    <load path="$LibraryRoot\Web Site Factory\_App_Themes\Factory">
      <forEach select="//file">
        <copy input="$LibraryRoot\Web Site Factory\_App_Themes\Factory\{@path}" output="WebApp\App_Themes\_Shared\{@path}"/>
      </forEach>
    </load>
    <load path="$ThemeInput">
      <forEach select="//file">
        <copy input="$ThemeInput\{@path}" output="$ProjectPath\WebApp\App_Themes\$Theme\{@path}"/>
      </forEach>
    </load>
    <if test="not($MembershipEnabled='true' or $WindowsAuthentication='true' or $CustomSecurity='true' or $ActiveDirectory='true')">
      <copy input="$ThemeInput\$Theme.css" output="$ProjectPath\WebApp\App_Themes\$Theme\$Theme.css">
        <regex pattern="@import.+?Membership.css\S+?\s+" replacement=""/>
      </copy>
    </if>
    <copy input="$LibraryRoot\Data Aquarium\_App_Themes\_Layout.skin" output="$ProjectPath\WebApp\App_Themes\$Namespace\_Layout.skin"/>
    <transform template="$LibraryRoot\Data Aquarium\_App_Themes\FactoryTheme.xslt" output="$ProjectPath\WebApp\App_Themes\$Namespace\_Theme_$Theme.css">
      <param name="Theme" select="$Theme"/>
      <param name="Namespace" select="$Namespace"/>
    </transform>
    <applyTheme theme="$Theme" output="WebApp\App_Themes\$Namespace\_Theme_$Theme.css"/>
    <load path="$ProjectPath">
      <!-- delete all .codedom.xml files -->
      <forEach select="//file[contains(@name, '.codedom.xml')]">
        <delete path="{@path}" silent="true"/>
      </forEach>
      <!-- merge Blob files -->
      <variable name="BlobSource" select="//file[starts-with(@name, 'Blob.') and not(contains(@name,'codedom'))]/@path"/>
      <copy input="$ProjectPath\$BlobSource" output="$BlobSource">
        <regex pattern="([^\x0d\S])(\x0a)" replacement="$1&#13;$2"/>
        <regex pattern="&quot;&amp;\s+_\s+&quot;" replacement=""/>
        <regex pattern="&quot;&amp;Global\.Microsoft\.VisualBasic\.ChrW\(10\)&amp;&quot;" replacement="&quot;&amp; _&#13;&#10;&#9;&#9;&#9;&quot;"/>
      </copy>
      <!--<delete path="$BlobSource"/>-->
    </load>
    <!-- create Class Library project file-->
    <load path="$LibraryRoot\_Config\CodeOnTime.CodeDom.xml">
      <variable name="CodedomProviderName" select="/config:configuration/config:providers/@default"/>
      <choose>
        <when test="$CodedomProviderName='CSharp'">
          <copy input="$ProjectPath\$Namespace\AssemblyInfo.cs" output="$Namespace\Properties\AssemblyInfo.cs">
            <regex pattern="\[" replacement="[assembly: "/>
            <regex pattern="public class[\s\S]*$" replacement=""/>
          </copy>
          <delete path="$ProjectPath\$Namespace\AssemblyInfo.cs"/>
          <copy input="$ProjectPath\Modules\AssemblyInfo.cs" output="Modules\Properties\AssemblyInfo.cs">
            <regex pattern="\[" replacement="[assembly: "/>
            <regex pattern="public class[\s\S]*$" replacement=""/>
          </copy>
          <delete path="$ProjectPath\Modules\AssemblyInfo.cs"/>
        </when>
        <otherwise>
          <copy input="$ProjectPath\$Namespace\AssemblyInfo.vb" output="$Namespace\My Project\AssemblyInfo.vb">
            <regex pattern="&quot;&amp;\s+_\s+&quot;" replacement=""/>
            <regex pattern="(WebResource\(&quot;\w+\.\w+\.)\w+\." replacement="$1"/>
            <regex pattern="&lt;([\s\S]+)&gt;" replacement=" $1,"/>
            <regex pattern="Public[\s\S]+End Class" replacement=""/>
            <regex pattern="\s(\w+\(.+?\)),\s+_" replacement="&lt;Assembly: $1&gt;"/>
          </copy>
          <delete path="$ProjectPath\$Namespace\AssemblyInfo.vb"/>
          <copy input="$ProjectPath\Modules\AssemblyInfo.vb" output="Modules\My Project\AssemblyInfo.vb">
            <regex pattern="&lt;([\s\S]+)&gt;" replacement=" $1,"/>
            <regex pattern="Public[\s\S]+End Class" replacement=""/>
            <regex pattern="\s(\w+\(.+?\)),\s+_" replacement="&lt;Assembly: $1&gt;"/>
          </copy>
          <delete path="$ProjectPath\Modules\AssemblyInfo.vb"/>
          <load path="$ProjectPath\$Namespace">
            <!--<forEach select="//file[(contains(@name, '.vb') or contains(@name,'.css')) and (@name!='AssemblyInfo.vb')]">
              <copy input="$ProjectPath\$Namespace\{@path}" output="$Namespace\{@path}">
                <regex pattern="Namespace\s+\w+\." replacement="Namespace "/>
                <regex pattern="(\w+)\.(\w+)\.(.+?)\.(js|css|gif|jpeg|jpg)" replacement="$1.$3.$4"/>
              </copy>
            </forEach>-->
            <forEach select="//file[contains(@name,'.css')]">
              <copy input="$ProjectPath\$Namespace\{@path}" output="$Namespace\{@path}">
                <!--<regex pattern="Namespace\s+\w+\." replacement="Namespace2 "/>-->
                <regex pattern="(\w+\.\w+)\.(\w+)\.(.+?)\.(js|css|gif|jpeg|jpg|png)" replacement="$1.$3.$4"/>
              </copy>
            </forEach>
          </load>
        </otherwise>
      </choose>
    </load>
    <!-- translate application resources -->
    <translate path="$ProjectPath\$Namespace" pattern="*.xyz" cultures="$Globalization_SupportedCultures" dictionary="$Namespace\Resources.txt"/>
    <load path="$ProjectPath\$Namespace" depth="0">
      <forEach select="//file[starts-with(@name, 'Resources.')]">
        <copy input="$ProjectPath\$Namespace\{@name}" output="{@name}"/>
      </forEach>
    </load>
    <translate path="$ProjectPath\WebApp" pattern="*.sitemap!,*.aspx,*.ascx" cultures="$Globalization_SupportedCultures" dictionary="Resources.txt" />
    <load path="$ProjectPath" depth="0">
      <forEach select="//file[starts-with(@name, 'Resources.')]">
        <delete path="{@path}"/>
      </forEach>
    </load>
    <translate path="$ProjectPath\$Namespace\Controllers" pattern="*.xml" cultures="$Globalization_SupportedCultures" dictionary="$Namespace\Resources.txt"/>
    <translate path="$ProjectPath\$Namespace\Reports" pattern="*.xslt" cultures="$Globalization_SupportedCultures" dictionary="$Namespace\Resources.txt"/>
    <translate path="$ProjectPath\$Namespace\Scripts" pattern="*.js" cultures="$Globalization_SupportedCultures" dictionary="ClientLibrary.txt"/>
    <!-- create a project file for "Aquarium in a Box" class library-->
    <load path="$Namespace\$Namespace.$ProjectExtension">
      <variable name="LibraryProjectGuid" select="//vsproj:ProjectGuid"/>
    </load>
    <load path="$ProjectPath\$Namespace">
      <!--<copy output="ProjectMap.xml"/>-->
      <transform template="VisualStudioProject.xslt" output="$Namespace\$Namespace.$ProjectExtension">
        <param name="ProjectName" select="$Namespace"/>
        <param name="ProjectGuid" select="$LibraryProjectGuid"/>
        <param name="CodedomProviderName" select="$CodedomProviderName"/>
        <param name="ReportsEnabled" select="$ReportsEnabled"/>
        <param name="TargetFramework" select="$TargetFramework"/>
        <param name="IsClassLibrary" select="'true'"/>
        <param name="MembershipProviderName" select="$MembershipProviderName"/>
        <param name="VisualStudioBuildTargets" select="$VisualStudioBuildTargets"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
        <param name="VisualStudio2012" select="$VisualStudio2012"/>
        <param name="VisualStudio2013" select="$VisualStudio2013"/>
      </transform>
    </load>
    <load path="$Namespace\$Namespace.$ProjectExtension">
      <variable name="ProjectGuid" select="//vsproj:ProjectGuid"/>
    </load>
    <!-- create a project file for WebApp app -->
    <load path="WebApp\WebApp.$ProjectExtension">
      <variable name="WebAppProjectGuid" select="//vsproj:ProjectGuid"/>
    </load>
    <load path="$ProjectPath\WebApp">
      <!--<copy output="WebAppMap.xml"/>-->
      <transform template="VisualStudioProject.xslt" output="WebApp\WebApp.$ProjectExtension">
        <param name="ProjectName" select="'WebApp'"/>
        <param name="ProjectGuid" select="$WebAppProjectGuid"/>
        <param name="ProjectExtension" select="$ProjectExtension"/>
        <param name="CodedomProviderName" select="$CodedomProviderName"/>
        <param name="Reference1" select="$Namespace"/>
        <param name="Reference1Guid" select="$ProjectGuid"/>
        <param name="TargetFramework" select="$TargetFramework"/>
        <param name="MembershipProviderName" select="$MembershipProviderName"/>
        <param name="ReportsEnabled" select="$ReportsEnabled"/>
        <param name="VisualStudioBuildTargets" select="$VisualStudioBuildTargets"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
        <param name="VisualStudio2012" select="$VisualStudio2012"/>
        <param name="VisualStudio2013" select="$VisualStudio2013"/>
      </transform>
    </load>
    <load path="WebApp\WebApp.$ProjectExtension">
      <variable name="WebAppGuid" select="//vsproj:ProjectGuid"/>
    </load>
    <!-- copy License and Release notes -->
    <load path="$ProjectPath\Modules" depth="0">
      <if test="not(//file[@name='License.txt'])">
        <copy input="License.txt.htm" output="Modules\License.txt"/>
      </if>
      <if test="not(//file[@name='ReleaseNotes.txt'])">
        <copy input="ReleaseNotes.txt.htm" output="Modules\ReleaseNotes.txt"/>
      </if>
    </load>
    <!-- create a project file for Modules app -->
    <load path="Modules\Modules.$ProjectExtension">
      <variable name="ModulesProjectGuid" select="//vsproj:ProjectGuid"/>
    </load>
    <load path="$ProjectPath\Modules">
      <!--<copy output="SanboxMap.xml"/>-->
      <transform template="VisualStudioProject.xslt" output="Modules\Modules.$ProjectExtension">
        <param name="ProjectName" select="'Modules'"/>
        <param name="ProjectGuid" select="$ModulesProjectGuid"/>
        <param name="ProjectExtension" select="$ProjectExtension"/>
        <param name="CodedomProviderName" select="$CodedomProviderName"/>
        <param name="Reference1" select="$Namespace"/>
        <param name="Reference1Guid" select="$ProjectGuid"/>
        <param name="Reference2" select="'WebApp'"/>
        <param name="Reference2Guid" select="$WebAppGuid"/>
        <param name="TargetFramework" select="$TargetFramework"/>
        <param name="MembershipProviderName" select="$MembershipProviderName"/>
        <param name="HostPath" select="$HostPath"/>
        <param name="VisualStudioBuildTargets" select="$VisualStudioBuildTargets"/>
        <param name="ScriptOnly" select="$ScriptOnly"/>
        <param name="VisualStudio2012" select="$VisualStudio2012"/>
        <param name="VisualStudio2013" select="$VisualStudio2013"/>
      </transform>
    </load>
    <!-- create a solution file -->
    <load path="Modules\Modules.$ProjectExtension">
      <variable name="ModulesGuid" select="//vsproj:ProjectGuid"/>
    </load>
    <load path="$ProjectPath" depth="0">
      <if test="not(file[@name=concat($Namespace, '.sln')])">
        <load path="DataAquarium.Project.xml">
          <transform template="Solution.sln.xslt" output="$Namespace.sln">
            <param name="Namespace" select="$Namespace"/>
            <param name="ProjectExtension" select="$ProjectExtension"/>
            <param name="ProjectGuid" select="$ProjectGuid"/>
            <param name="ModulesGuid" select="$ModulesGuid"/>
            <param name="WebAppGuid" select="$WebAppGuid"/>
            <param name="TargetFramework" select="$TargetFramework"/>
            <param name="VisualStudioBuildTargets" select="$VisualStudioBuildTargets"/>
            <param name="VisualStudio2012" select="$VisualStudio2012"/>
            <param name="VisualStudio2013" select="$VisualStudio2013"/>
          </transform>
        </load>
      </if>
    </load>
    <!-- delete temprorary files -->
    <delete path="DataModel.xml"/>
    <delete path="Controllers.xml"/>
    <delete path="Application.Web.Config.xml"/>
    <delete path="Application.xml"/>
    <delete path="Map1.xml"/>
    <delete path="Map2.xml"/>
    <delete path="Map3.xml"/>
    <delete path="Map4.xml"/>
    <load path="DataAquarium.Project.xml">
      <variable name="Namespace" select="a:project/a:namespace"/>
      <if test="a:project/a:webServer/@run='true'">
        <choose>
          <when test="a:project/@targetFramework='4.0'">
            <!--<execute fileName="$VisualStudio2010" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /Rebuild" mode="wait"/>-->
            <execute fileName="$MSBuild40" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot;  /t:rebuild /verbosity:m /p:Platform=&quot;Any CPU&quot;" mode="wait"/>
            <load path="$ProjectPath\WebApp\bin">
              <variable name="Compiled" select="//file[contains(@name,'.WebApp.dll')]/@name"/>
            </load>
            <choose>
              <when test="$Compiled!=''">
                <choose>
                  <when test="$IISExpress='true'">
                    <browse name="$ProjectName" path="$ProjectPath\WebApp" port="{a:project/a:webServer/@port}"
                            framework="{a:project/@targetFramework}"
                            windowsAuthentication="{a:project/a:membership/@windowsAuthentication}"
                            relativePath="default.aspx"/>
                  </when>
                  <otherwise>
                    <execute fileName="$WebDevWebServer40" arguments="/port:{a:project/a:webServer/@port} /path:&quot;$ProjectPath\WebApp&quot; /vpath:&quot;/$ProjectName&quot;" mode="nowait"/>
                    <execute fileName="http://localhost:{a:project/a:webServer/@port}/$ProjectName/default.aspx" arguments="-new" mode="nowait"/>
                  </otherwise>
                </choose>
              </when>
              <when test="$VisualStudio2013!=''">
                <execute fileName="$VisualStudio2013" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /Run" mode="nowait"/>
              </when>
              <when test="$VisualStudio2012!=''">
                <execute fileName="$VisualStudio2012" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /Run" mode="nowait"/>
              </when>
              <when test="$VisualStudio2010!=''">
                <execute fileName="$VisualStudio2010" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /Run" mode="nowait"/>
              </when>
              <otherwise>
                <execute fileName="$VisualStudio2008" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /Run" mode="nowait"/>
              </otherwise>
            </choose>
          </when>
          <otherwise>
            <execute fileName="$MSBuild35" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /t:clean;build /verbosity:m /p:Platform=&quot;Any CPU&quot;" mode="wait"/>
            <load path="$ProjectPath\WebApp\bin">
              <variable name="Compiled" select="//file[contains(@name,'.WebApp.dll')]/@name"/>
            </load>
            <choose>
              <when test="$Compiled!=''">
                <choose>
                  <when test="$IISExpress='true'">
                    <browse name="$ProjectName" path="$ProjectPath\WebApp" port="{a:project/a:webServer/@port}"
                            framework="{a:project/@targetFramework}"
                            windowsAuthentication="{a:project/a:membership/@windowsAuthentication}"
                            relativePath="default.aspx"/>
                  </when>
                  <otherwise>
                    <execute fileName="$WebDevWebServer" arguments="/port:{a:project/a:webServer/@port} /path:&quot;$ProjectPath\WebApp&quot; /vpath:&quot;/$ProjectName&quot;" mode="nowait"/>
                    <execute fileName="http://localhost:{a:project/a:webServer/@port}/$ProjectName/default.aspx" arguments="-new" mode="nowait"/>
                  </otherwise>
                </choose>
              </when>
              <otherwise>
                <!--<execute fileName="$VisualStudio2008" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /Run" mode="nowait"/>-->
                <execute fileName="file://$ProjectPath\{a:project/a:namespace}.sln" arguments="" mode="nowait"/>
              </otherwise>
            </choose>
          </otherwise>
        </choose>
        <!--<if test="$Compiled!=''">
          <execute fileName="http://localhost:{a:project/a:webServer/@port}/$ProjectName/default.aspx" arguments="-new" mode="nowait"/>
        </if>-->
      </if>
    </load>
  </build>
  <actions>
    <action name="Develop" toolTip="Open in Visual Studio to customize the project.">
      <load path="DataAquarium.Project.xml">
        <execute fileName="file://$ProjectPath\{a:project/a:namespace}.sln" arguments="" mode="nowait"/>
      </load>
    </action>
    <action name="Browse" toolTip="Compile and view the host app in a web browser.">
      <load path="DataAquarium.Project.xml">
        <choose>
          <when test="a:project/@targetFramework='4.0'">
            <execute fileName="$MSBuild40" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /t:rebuild /verbosity:m /p:Platform=&quot;Any CPU&quot;" mode="wait"/>
            <load path="$ProjectPath\WebApp\bin">
              <variable name="Compiled" select="//file[contains(@name,'.WebApp.dll')]/@name"/>
            </load>
            <choose>
              <when test="$Compiled!=''">
                <choose>
                  <when test="$IISExpress='true'">
                    <browse name="$ProjectName" path="$ProjectPath\WebApp" port="{a:project/a:webServer/@port}"
                            framework="{a:project/@targetFramework}"
                            windowsAuthentication="{a:project/a:membership/@windowsAuthentication}"
                            relativePath="default.aspx"/>
                  </when>
                  <otherwise>
                    <execute fileName="$WebDevWebServer40" arguments="/port:{a:project/a:webServer/@port} /path:&quot;$ProjectPath\WebApp&quot; /vpath:&quot;/$ProjectName&quot;" mode="nowait"/>
                    <execute fileName="http://localhost:{a:project/a:webServer/@port}/$ProjectName/default.aspx" arguments="-new" mode="nowait"/>
                  </otherwise>
                </choose>
              </when>
              <otherwise>
                <execute fileName="$VisualStudio2010" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /Run" mode="nowait"/>
              </otherwise>
            </choose>
          </when>
          <otherwise>
            <execute fileName="$MSBuild35" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /t:clean;build /verbosity:m /p:Platform=&quot;Any CPU&quot;" mode="wait"/>
            <!--<execute fileName="$MSBuild35" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /t:rebuild /verbosity:m" mode="wait"/>-->
            <load path="$ProjectPath\WebApp\bin">
              <variable name="Compiled" select="//file[contains(@name,'.WebApp.dll')]/@name"/>
            </load>
            <choose>
              <when test="$Compiled!=''">
                <choose>
                  <when test="$IISExpress='true'">
                    <browse name="$ProjectName" path="$ProjectPath\WebApp" port="{a:project/a:webServer/@port}"
                            framework="{a:project/@targetFramework}"
                            windowsAuthentication="{a:project/a:membership/@windowsAuthentication}"
                            relativePath="default.aspx"/>
                  </when>
                  <otherwise>

                    <execute fileName="$WebDevWebServer" arguments="/port:{a:project/a:webServer/@port} /path:&quot;$ProjectPath\WebApp&quot; /vpath:&quot;/$ProjectName&quot;" mode="nowait"/>
                    <execute fileName="http://localhost:{a:project/a:webServer/@port}/$ProjectName/default.aspx" arguments="-new" mode="nowait"/>
                  </otherwise>
                </choose>
              </when>
              <otherwise>
                <!--<execute fileName="$VisualStudio2008" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /Run" mode="nowait"/>-->
                <execute fileName="file://$ProjectPath\{a:project/a:namespace}.sln" arguments="" mode="nowait"/>
              </otherwise>
            </choose>
          </otherwise>
        </choose>
        <!--<if test="$Compiled!=''">
          <execute fileName="http://localhost:{a:project/a:webServer/@port}/$ProjectName/default.aspx" arguments="-new" mode="nowait"/>
        </if>-->
      </load>
    </action>
    <action name="Publish" toolTip="Publish the web application module to DotNetNuke.">
      <load path="$LibraryRoot\_Config\CodeOnTime.CodeDom.xml">
        <variable name="ProjectExtension" select="concat(substring-after(/config:configuration/config:providers/config:provider[@name=/config:configuration/config:providers/@default]/@extension, '.'), 'proj')"/>
      </load>
      <load path="DataAquarium.Project.xml">
        <variable name="Namespace" select="a:project/a:namespace"/>
        <variable name="Version" select="'01.00.00'"/>
        <variable name="HostPath" select="a:project/a:host/@path"/>
        <variable name="PackageProperties" select="a:project/a:features/a:packageProperties"/>
        <variable name="TargetFramework" select="a:project/@targetFramework"/>
        <choose>
          <when test="$TargetFramework='3.5'">
            <execute fileName="$MSBuild35" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /t:clean;build /verbosity:m /p:Platform=&quot;Any CPU&quot;" mode="wait"/>
          </when>
          <otherwise>
            <execute fileName="$MSBuild40" arguments="&quot;$ProjectPath\{a:project/a:namespace}.sln&quot; /t:rebuild /verbosity:m /p:Platform=&quot;Any CPU&quot;" mode="wait"/>
          </otherwise>
        </choose>
        <delete path="$Root\Publish\DotNetNuke Factory\$ProjectName\Package"/>
        <load path="$ProjectPath\Modules\bin">
          <forEach select="//file[@extension = '.dll' and not(
                      starts-with(@loweredName,'dotnetnuke.') 
                   or starts-with(@name,'ClientDependency.')
                   or starts-with(@name,'CountryListBox.')
                   or starts-with(@name,'SharpZipLib.')
                   or starts-with(@name,'Telerik')
                   )]">
            <copy input="$ProjectPath\Modules\Bin\{@path}" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\bin\{@path}" />
          </forEach>
        </load>
        <load path="$ProjectPath\WebApp\Controls">
          <forEach select="//file[@extension='.ascx']">
            <copy input="$ProjectPath\WebApp\Controls\{@path}" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\Controls\{@path}">
              <regex pattern=" CodeBehind=&quot;.+?&quot;" replacement=""/>
            </copy>
          </forEach>
        </load>
        <load path="$ProjectPath\WebApp\Pages">
          <forEach select="//file[@extension='.ascx']">
            <copy input="$ProjectPath\WebApp\Pages\{@path}" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\Pages\{@path}">
              <regex pattern=" CodeBehind=&quot;.+?&quot;" replacement=""/>
            </copy>
          </forEach>
        </load>
        <copy input="$ProjectPath\WebApp\Settings.ascx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\Settings.ascx">
          <regex pattern=" CodeBehind=&quot;.+?&quot;" replacement=""/>
        </copy>
        <copy input="$ProjectPath\Modules\AppModuleSettings.ascx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\AppModuleSettings.ascx">
          <regex pattern=" CodeBehind=&quot;.+?&quot;" replacement=""/>
        </copy>
        <copy input="$ProjectPath\Modules\AppModuleView.ascx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\AppModuleView.ascx">
          <regex pattern=" CodeBehind=&quot;.+?&quot;" replacement=""/>
        </copy>
        <copy input="$ProjectPath\Modules\Report.ashx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\Report.ashx"/>
        <copy input="$ProjectPath\Modules\Blob.ashx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\Blob.ashx"/>
        <copy input="$ProjectPath\Modules\Import.ashx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\Import.ashx"/>
        <copy input="$ProjectPath\Modules\Export.ashx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\Export.ashx"/>
        <copy input="$ProjectPath\Modules\ControlHost.aspx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\ControlHost.aspx"/>
        <copy input="$ProjectPath\WebApp\DAF\Service.asmx" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\Service.asmx"/>
        <copy input="$ProjectPath\Modules\License.txt" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\License.txt"/>
        <copy input="$ProjectPath\Modules\ReleaseNotes.txt" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\ReleaseNotes.txt"/>
        <load path="$Root\Publish\DotNetNuke Factory\$ProjectName\Package">
          <!--<copy output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package.xml"/>-->
          <transform template="Manifest.dnn5.xslt" output="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\$ProjectName.dnn">
            <param name="Namespace" select="$Namespace"/>
            <param name="PackageProperties" select="$PackageProperties"/>
          </transform>
        </load>
        <copy input="$Root\Publish\DotNetNuke Factory\$ProjectName\Package" output="$Root\Publish\DotNetNuke Factory\$ProjectName\{'$Namespace'}_{'$Version'}_Install.resources" mode="zip"/>
        <copy input="$Root\Publish\DotNetNuke Factory\$ProjectName\{'$Namespace'}_{'$Version'}_Install.resources" output="$HostPath\Install\Module"/>
        <load path="$HostPath\DesktopModules" depth="1">
          <if test="//folder[@path=$Namespace]">
            <load path="$Root\Publish\DotNetNuke Factory\$ProjectName\Package">
              <forEach select="//file[@extension!='.dll']">
                <copy input="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\{@path}" output="$HostPath\DesktopModules\{'$Namespace'}\{@path}" mode="overwrite"/>
              </forEach>
            </load>
            <load path="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\bin" depth="0">
              <forEach select="//file[@extension='.dll']">
                <copy input="$Root\Publish\DotNetNuke Factory\$ProjectName\Package\bin\{@path}" output="$HostPath\bin\{@path}" mode="overwrite"/>
              </forEach>
            </load>
          </if>
        </load>
        <delete path="$Root\Publish\DotNetNuke Factory\$ProjectName\Package"/>
        <execute fileName="$Root\Publish\DotNetNuke Factory\$ProjectName" arguments="" mode="nowait"/>
      </load>
    </action>
  </actions>
  <settings>
    <group name="Namespace" section="Location" text="DotNetNuke Location" description="Specify location of your DotNetNuke portal."/>
    <group name="Namespace" text="Namespace and Framework" description="Change the source code namespace and target .NET framework of the generated web application."/>
    <group name="Connection" text="Database Connection" description="Configure database connection provider and connection string properties."/>
    <group name="BLL" text="Business Logic Layer" description="Configue shared business rules, data access objects, relationship discovery, denormalization map, and text label construction."/>
    <group name="Reports" text="Reporting" description="Enable or disable automatic reports in your application."/>
    <!--<group name="Membership" text="Authentication and Membership" description="Select authentication and membership options for your web app."/>-->
    <group name="Features" text="Features" description="Specify global features of the generated baseline application."/>
    <group name="Layout" text="Layouts" description="Specify the page data view layout preferences. Select simple, tabbed, classic, inline, or stacked layout."/>
    <group name="Theme" text="Theme" description="Change user interface theme."/>
    <group name="Globalization" text="Globalization and Localization" description="Enter globalization and localization settings of this application."/>
    <group name="WebServer" text="Web Server Configuration" description="Configure development web server and enter runtime configuration properties of the application."/>
  </settings>
</project>
